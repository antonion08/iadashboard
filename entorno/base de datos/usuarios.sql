-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.agenda
(
    id_agenda serial NOT NULL,
    id_estudiante_materia integer,
    fecha_agenda timestamp without time zone NOT NULL,
    descripcion_alerta_agenda integer NOT NULL,
    CONSTRAINT agenda_pkey PRIMARY KEY (id_agenda)
);

CREATE TABLE IF NOT EXISTS public.carrera
(
    id_carrera serial NOT NULL,
    id_facultad integer,
    nombre_carrera integer NOT NULL,
    CONSTRAINT carrera_pkey PRIMARY KEY (id_carrera)
);

CREATE TABLE IF NOT EXISTS public.estudiante
(
    id_estudiante serial NOT NULL,
    cedula_estudiante integer NOT NULL,
    nombre_estudiante character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido_estudiante character varying(50) COLLATE pg_catalog."default" NOT NULL,
    correo_estudiante character varying(150) COLLATE pg_catalog."default" NOT NULL,
    edad_estudiante integer,
    CONSTRAINT estudiante_pkey PRIMARY KEY (id_estudiante)
);

COMMENT ON COLUMN public.estudiante.id_estudiante
    IS 'ID estudiante';

COMMENT ON COLUMN public.estudiante.cedula_estudiante
    IS 'Cedula Estudiante';

CREATE TABLE IF NOT EXISTS public.estudiante_materia
(
    id_estudiante_materia serial NOT NULL,
    id_estudiante integer,
    id_materia integer,
    id_periodo integer,
    id_nota integer,
    CONSTRAINT estudiante_materia_pkey PRIMARY KEY (id_estudiante_materia)
);

COMMENT ON COLUMN public.estudiante_materia.id_estudiante
    IS 'ID estudiante';

COMMENT ON COLUMN public.estudiante_materia.id_materia
    IS 'ID materia';

CREATE TABLE IF NOT EXISTS public.facultad
(
    id_facultad serial NOT NULL,
    nombre_facultad character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT facultad_pkey PRIMARY KEY (id_facultad)
);

CREATE TABLE IF NOT EXISTS public.info_academico
(
    id_infoaca serial NOT NULL,
    id_estudiante integer,
    uc_inscritos_info integer NOT NULL,
    uc_aprobadas_info integer NOT NULL,
    nro_asignaturas_inscritas_info integer NOT NULL,
    nro_asignaturas_aprovadas_info integer NOT NULL,
    nro_asignaturas_retiradas_info integer NOT NULL,
    promedio_general_notas_info double precision,
    promedio_ponderado_notas double precision,
    promedio_ponderado_notas_aprobadas_info double precision,
    promedio_general_notas_aprovadas_info double precision,
    CONSTRAINT info_academico_pkey PRIMARY KEY (id_infoaca)
);

COMMENT ON COLUMN public.info_academico.id_estudiante
    IS 'ID estudiante';

CREATE TABLE IF NOT EXISTS public.materia
(
    id_materia serial NOT NULL,
    id_carrera integer,
    nombre_materia character varying(40) COLLATE pg_catalog."default" NOT NULL,
    uc_materia integer NOT NULL,
    CONSTRAINT materia_pkey PRIMARY KEY (id_materia)
);

COMMENT ON COLUMN public.materia.id_materia
    IS 'ID materia';

CREATE TABLE IF NOT EXISTS public.nota
(
    id_nota serial NOT NULL,
    calificacion_nota integer NOT NULL,
    acumulado_nota double precision NOT NULL,
    CONSTRAINT nota_pkey PRIMARY KEY (id_nota)
);

COMMENT ON TABLE public.nota
    IS 'notas con las evaluaciones de los estudiantes
';

CREATE TABLE IF NOT EXISTS public.periodo
(
    id_periodo serial NOT NULL,
    nombre_periodo character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT periodo_pkey PRIMARY KEY (id_periodo)
);

CREATE TABLE IF NOT EXISTS security.login
(
    id_usuarios integer NOT NULL,
    usuario_login character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "contrase√±a_login" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT login_pkey PRIMARY KEY (id_usuarios)
);

ALTER TABLE IF EXISTS public.agenda
    ADD CONSTRAINT fk_agenda_0 FOREIGN KEY (id_estudiante_materia)
    REFERENCES public.estudiante_materia (id_estudiante_materia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.carrera
    ADD CONSTRAINT fk_carrera_0 FOREIGN KEY (id_facultad)
    REFERENCES public.facultad (id_facultad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.estudiante_materia
    ADD CONSTRAINT fk_estudiante_materia_0 FOREIGN KEY (id_materia)
    REFERENCES public.materia (id_materia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.estudiante_materia
    ADD CONSTRAINT fk_estudiante_materia_1 FOREIGN KEY (id_estudiante)
    REFERENCES public.estudiante (id_estudiante) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.estudiante_materia
    ADD CONSTRAINT fk_estudiante_materia_2 FOREIGN KEY (id_periodo)
    REFERENCES public.periodo (id_periodo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.estudiante_materia
    ADD CONSTRAINT fk_estudiante_materia_3 FOREIGN KEY (id_nota)
    REFERENCES public.nota (id_nota) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.info_academico
    ADD CONSTRAINT fk_info_academico_0 FOREIGN KEY (id_estudiante)
    REFERENCES public.estudiante (id_estudiante) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.materia
    ADD CONSTRAINT fk_materia_0 FOREIGN KEY (id_carrera)
    REFERENCES public.carrera (id_carrera) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;